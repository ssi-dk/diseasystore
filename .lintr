linters: c(
    diseasy_code_linters(),
    all_linters(
      line_length_linter = NULL,          # We use 120, nolint-aware line length linter instead
      cyclocomp_linter = NULL,            # Not required in diseasy style guide
      keyword_quote_linter = NULL,        # Not required in diseasy style guide
      implicit_integer_linter = NULL,     # Not required in diseasy style guide
      extraction_operator_linter = NULL,  # Fails for .data$*
      nonportable_path_linter = NULL,     # Any \\ is flagged. Therefore fails when escaping backslashes
      undesirable_function_linter = NULL, # Library calls in vignettes are flagged and any call to options
      unnecessary_lambda_linter = NULL,   # Fails for purrr::map with additional function arguments
      strings_as_factors_linter = NULL,   # Seems to be some backwards compatibility stuff.
      expect_identical_linter = NULL      # Seems a little aggressive to require this.
    )
  )
exclude_linter: paste0(
    "^ *: *(", # Any number of spaces before and after the colon
    paste(c(names(lintr::all_linters()), names(diseasy_code_linters())), collapse = "|"), # Any of our linters
    ",| )+(\\.|$)" # As a comma separated list (with optional spaces) followed by a period or end of line
  )
exclusions: c(
    list(
      "R/0_linters.R" = list(
        "nolint_position_linter" = Inf
      )
    ),
    if (file.exists(".lintr_exclusions.R")) {
      source(".lintr_exclusions.R")$value
    } else {
      list()
    }
  )
